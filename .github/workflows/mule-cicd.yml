# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
     - name: maven-settings-xml-action
       uses: whelk-io/maven-settings-xml-action@v4
       with:
        repositories: '[{ "id": "exchange-repository", "name": "Exchange Repository", "url": "https://maven.anypoint.mulesoft.com/api/v1/organizations/b98c32e8-d191-45e2-b771-be0bb518521c/maven", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
        plugin_repositories: '[{ "id": "mulesoft-releases", "name": "MuleSoft Releases Repository", "url": "http://repository.mulesoft.org/releases/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" }}]'
        servers: '[{ "id": "exchange-repository", "username": "", "password": "" }]'
          #mirrors: '[{ "id": "nexus", "mirrorOf": "!my-org-snapshots,*", "url": "http://redacted/nexus/content/groups/public" }]'
          #profiles: '[{ "id": "foo.profile", "name": "foo.profile", "url": "http://foo.bar.profile", "properties": { "foo": "property-1", "bar": "property-2"} }]'   
    
     - uses: actions/checkout@v2
     - name: Set up JDK 1.8
       uses: actions/setup-java@v1
       with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

     - name: Build with Maven
       run: mvn -B package --file pom.xml

     - name: Publish to GitHub Packages Apache Maven
       run: mvn clean install 
       env:
        GITHUB_TOKEN: ${{ github.token }}
